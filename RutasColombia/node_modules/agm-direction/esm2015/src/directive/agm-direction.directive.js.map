{"version":3,"file":"agm-direction.directive.js","sourceRoot":"","sources":["../../package/src/directive/agm-direction.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAqB,YAAY,EAAa,MAAM,eAAe,CAAC;AACrG,OAAO,EAAE,oBAAoB,EAAE,MAAM,WAAW,CAAC;AAKjD,MAAM,OAAO,YAAY;IAmEvB,YACU,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;QAxD/B,cAAS,GAAqC,EAAE,CAAC;QAEjD,sBAAiB,GAAG,IAAI,CAAC;QAEzB,6BAAwB,GAAG,KAAK,CAAC;QAEjC,kBAAa,GAAG,KAAK,CAAC;QAEtB,eAAU,GAAG,KAAK,CAAC;QAMnB,kBAAa,GAIlB,EAAE,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;QAInD,2BAA2B;QAClB,YAAO,GAAG,IAAI,CAAC;QAKxB,iCAAiC;QACvB,aAAQ,GAA+C,IAAI,YAAY,EAAgC,CAAC;QAElH,yCAAyC;QAC/B,eAAU,GAA+C,IAAI,YAAY,EAAgC,CAAC;QAEpH,2BAA2B;QACjB,mBAAc,GAAyC,IAAI,YAAY,EAA0B,CAAC;QAE5G,6EAA6E;QACnE,WAAM,GAA+C,IAAI,YAAY,EAAgC,CAAC;QAEhH,4BAA4B;QAClB,eAAU,GAAsB,IAAI,YAAY,EAAO,CAAC;QACxD,oBAAe,GAAsB,IAAI,YAAY,EAAO,CAAC;QAQ/D,oBAAe,GAA8B,EAAE,CAAC;QAExD,uBAAuB;QACf,kBAAa,GAAG,IAAI,CAAC;IAIzB,CAAC;IAEL,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACzB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAED,WAAW,CAAC,GAAQ;QAClB;;WAEG;QACH,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI;gBACF,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;YAAC,OAAO,CAAC,EAAE,GAAG;SAChB;aAAM;YACL,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB;;mBAEG;gBACH,IAAI,OAAO,IAAI,CAAC,kBAAkB,KAAK,WAAW,EAAE;oBAClD,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;gBACD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,OAAO;aACR;YAED;;eAEG;YACH,IAAI,OAAO,GAAG,CAAC,aAAa,KAAK,WAAW,EAAE;gBAC5C,IAAI,GAAG,CAAC,aAAa,CAAC,WAAW,KAAK,KAAK,EAAE;oBAC3C,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACzB;aACF;YACD,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED;;OAEG;IACK,aAAa;QACnB,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAEvC,MAAM,GAAG,GAAG,IAA2C,CAAC;YAExD,IAAI,OAAO,IAAI,CAAC,kBAAkB,KAAK,WAAW,EAAE;gBAClD,IAAI,CAAC,kBAAkB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACjF,aAAa;gBACb,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,oBAAoB,EAAE,GAAG,EAAE;oBAC7D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC;aACJ;YAED,IAAI,OAAO,IAAI,CAAC,iBAAiB,KAAK,WAAW,EAAE;gBACjD,IAAI,CAAC,iBAAiB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC9D;YAED,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,EAAE;gBACrC,aAAa;gBACb,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACxC;iBAAM;gBACL,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9C;YAED,yBAAyB;YACzB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACxD,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;aAC9B;iBAAM;gBAEL,wBAAwB;gBACxB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;oBAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO;oBAC7D,cAAc,EAAE,IAAI,CAAC,cAAc;oBACnC,cAAc,EAAE,IAAI,CAAC,cAAc;oBACnC,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;oBACzC,wBAAwB,EAAE,IAAI,CAAC,wBAAwB;oBACvD,aAAa,EAAE,IAAI,CAAC,aAAa;oBACjC,UAAU,EAAE,IAAI,CAAC,UAAU;iBAC5B,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE;oBAEtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAE/B,oBAAoB;oBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAEzB;;;uBAGG;oBACH,QAAQ,MAAM,EAAE;wBACd,KAAK,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;4BAElC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;4BAEhD;;;+BAGG;4BACH,iBAAiB;4BACjB,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,WAAW,EAAE;gCAE7C,IAAI,CAAC,cAAc,EAAE,CAAC;gCAEtB,qBAAqB;gCACrB,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCAC1C,IAAI;oCACF,gBAAgB;oCAChB,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,WAAW,EAAE;wCACpD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;wCACpC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC;wCAC3D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAChC,GAAG,EACH,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,aAAa,CAAC,MAAM,EACzB,MAAM,CAAC,aAAa,CACrB,CAAC;wCAEF,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE;4CACvC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,EAAE,GAAG,EAAE;gDAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;gDACzC,IAAI,CAAC,aAAa,EAAE,CAAC;gDACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4CACpC,CAAC,CAAC,CAAC;yCACJ;qCACF;oCACD,qBAAqB;oCACrB,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,KAAK,WAAW,EAAE;wCACzD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC;wCACzC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC;wCAC9D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CACrC,GAAG,EACH,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAC9B,MAAM,CAAC,WAAW,CACnB,CAAC;wCACF,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE;4CAC5C,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,SAAS,EAAE,GAAG,EAAE;gDACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;gDACnD,IAAI,CAAC,aAAa,EAAE,CAAC;gDACrB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;4CAC9C,CAAC,CAAC,CAAC;yCACJ;qCACF;oCAED,mBAAmB;oCACnB,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,WAAW,EAAE;wCAEvD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;4CAEzC,mDAAmD;4CACnD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE;gDAChD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;gDACvC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gDACpE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CACtC,GAAG,EACH,QAAQ,EACR,IAAI,CAAC,aAAa,CAAC,SAAS,EAC5B,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAC5B,CAAC,CAAC;6CACJ;iDAAM;gDACL,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;gDAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gDAC3E,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CACtC,GAAG,EACH,QAAQ,EACR,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,EACnC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAC5B,CAAC,CAAC;6CACJ;wCAEH,CAAC,CAAC,CAAC,CAAC,cAAc;qCAEnB;iCACF;gCAAC,OAAO,GAAG,EAAE;oCACZ,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;iCAC5C;6BACF;4BAED,MAAM;wBAER,KAAK,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB;4BAChD,OAAO,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;4BACvF,MAAM;wBACR;4BACE,wBAAwB;4BACxB,MAAM;qBACT,CAAC,aAAa;gBACjB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;;OAQG;IACK,SAAS,CACf,GAAoB,EACpB,MAA2D,EAC3D,UAAe,EACf,OAAoC;QAEpC,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,WAAW,EAAE;YAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YAC/C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3C;QAED,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC5C,gHAAgH;QAChH,IAAI,MAAM,CAAC,YAAY,EAAE,EAAE;YACzB,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE;gBAC/B,MAAM,gBAAgB,GAAW,OAAO,UAAU,CAAC,UAAU,KAAK,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC;gBAChH,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;gBAC7C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,MAA+B,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACK,aAAa;QACnB,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;YAC5C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAChC;QACD,IAAI,OAAO,IAAI,CAAC,iBAAiB,KAAK,WAAW,EAAE;YACjD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,EAAE;YACtC,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;gBAC5B,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,gBAAgB;QACtB,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAE;YACzC,aAAa;YACb,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACrC,aAAa;YACb,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;SACrC;IACH,CAAC;IAED;;OAEG;IACK,cAAc;QACpB,wBAAwB;QACxB,IAAI;YACF,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;gBAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBAC7D,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE;oBACvC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;iBAChE;aACF;YACD,IAAI,OAAO,IAAI,CAAC,iBAAiB,KAAK,WAAW,EAAE;gBACjD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;gBAClE,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE;oBACvC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;iBACrE;aACF;YACD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,EAAE;gBACtC,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;oBAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;iBAC9C;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,EAAE,CAAC;SAEtB;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;SACpD;IACH,CAAC;;;YAjXF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;aAC1B;;;YAJQ,oBAAoB;;;qBAO1B,KAAK;0BAEL,KAAK;yBAEL,KAAK;6BAEL,KAAK;6BAEL,KAAK;wBAEL,KAAK;gCAEL,KAAK;uCAEL,KAAK;4BAEL,KAAK;yBAEL,KAAK;4BAEL,KAAK;oBAEL,KAAK;4BAEL,KAAK;yBAML,KAAK;sBAGL,KAAK;0BAGL,KAAK;uBAGL,MAAM;yBAGN,MAAM;6BAGN,MAAM;qBAGN,MAAM;yBAGN,MAAM;8BACN,MAAM","sourcesContent":["import { Directive, Input, Output, OnChanges, OnInit, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { GoogleMapsAPIWrapper } from '@agm/core';\r\n\r\n@Directive({\r\n  selector: 'agm-direction',\r\n})\r\nexport class AgmDirection implements OnChanges, OnInit, OnDestroy {\r\n\r\n  @Input() origin: string | google.maps.Place | google.maps.LatLng | google.maps.LatLngLiteral;\r\n\r\n  @Input() destination: string | google.maps.Place | google.maps.LatLng | google.maps.LatLngLiteral;\r\n\r\n  @Input() travelMode?: google.maps.TravelMode;\r\n\r\n  @Input() transitOptions?: google.maps.TransitOptions;\r\n\r\n  @Input() drivingOptions?: google.maps.DrivingOptions;\r\n\r\n  @Input() waypoints: google.maps.DirectionsWaypoint[] = [];\r\n\r\n  @Input() optimizeWaypoints = true;\r\n\r\n  @Input() provideRouteAlternatives = false;\r\n\r\n  @Input() avoidHighways = false;\r\n\r\n  @Input() avoidTolls = false;\r\n\r\n  @Input() renderOptions?: google.maps.DirectionsRendererOptions;\r\n\r\n  @Input() panel?: Element;\r\n\r\n  @Input() markerOptions: {\r\n    origin: google.maps.MarkerOptions,\r\n    destination: google.maps.MarkerOptions,\r\n    waypoints: google.maps.MarkerOptions,\r\n  } = { origin: {}, destination: {}, waypoints: {} };\r\n\r\n  @Input() infoWindow: google.maps.InfoWindow;\r\n\r\n  // Remove or draw direction\r\n  @Input() visible = true;\r\n\r\n  // Render exist direction\r\n  @Input() renderRoute?: google.maps.DirectionsResult | null;\r\n\r\n  // Direction change event handler\r\n  @Output() onChange: EventEmitter<google.maps.DirectionsResult> = new EventEmitter<google.maps.DirectionsResult>();\r\n\r\n  // Direction response for the new request\r\n  @Output() onResponse: EventEmitter<google.maps.DirectionsResult> = new EventEmitter<google.maps.DirectionsResult>();\r\n\r\n  // Send a custom infowindow\r\n  @Output() sendInfoWindow: EventEmitter<google.maps.InfoWindow> = new EventEmitter<google.maps.InfoWindow>();\r\n\r\n  // Status of Directions Query (google.maps.DirectionsStatus.OVER_QUERY_LIMIT)\r\n  @Output() status: EventEmitter<google.maps.DirectionsStatus> = new EventEmitter<google.maps.DirectionsStatus>();\r\n\r\n  // Marker drag event handler\r\n  @Output() originDrag: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() destinationDrag: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  public directionsService: google.maps.DirectionsService;\r\n  public directionsRenderer: google.maps.DirectionsRenderer;\r\n\r\n  // Use for custom marker\r\n  private originMarker?: any;\r\n  private destinationMarker?: any;\r\n  private waypointsMarker: Array<google.maps.Marker> = [];\r\n\r\n  // Use for visible flag\r\n  private isFirstChange = true;\r\n\r\n  constructor(\r\n    private gmapsApi: GoogleMapsAPIWrapper,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.visible === true) {\r\n      this.directionDraw();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(obj: any) {\r\n    /**\r\n     * When visible is false then remove the direction layer\r\n     */\r\n    if (!this.visible) {\r\n      try {\r\n        this.removeMarkers();\r\n        this.removeDirections();\r\n      } catch (e) { }\r\n    } else {\r\n      if (this.isFirstChange) {\r\n        /**\r\n         * When visible is false at the first time\r\n         */\r\n        if (typeof this.directionsRenderer === 'undefined') {\r\n          this.directionDraw();\r\n        }\r\n        this.isFirstChange = false;\r\n        return;\r\n      }\r\n\r\n      /**\r\n       * When renderOptions are not first change then reset the display\r\n       */\r\n      if (typeof obj.renderOptions !== 'undefined') {\r\n        if (obj.renderOptions.firstChange === false) {\r\n          this.removeMarkers();\r\n          this.removeDirections();\r\n        }\r\n      }\r\n      this.directionDraw();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyMarkers();\r\n    this.removeDirections();\r\n  }\r\n\r\n  /**\r\n   * This event is fired when the user creating or updating this direction\r\n   */\r\n  private directionDraw() {\r\n    this.gmapsApi.getNativeMap().then(_map => {\r\n\r\n      const map = _map as unknown as google.maps.Map<Element>;\r\n\r\n      if (typeof this.directionsRenderer === 'undefined') {\r\n        this.directionsRenderer = new google.maps.DirectionsRenderer(this.renderOptions);\r\n        // @ts-ignore\r\n        this.directionsRenderer.setMap(map);\r\n        this.directionsRenderer.addListener('directions_changed', () => {\r\n          this.onChange.emit(this.directionsRenderer.getDirections());\r\n        });\r\n      }\r\n\r\n      if (typeof this.directionsService === 'undefined') {\r\n        this.directionsService = new google.maps.DirectionsService();\r\n      }\r\n\r\n      if (typeof this.panel === 'undefined') {\r\n        // @ts-ignore\r\n        this.directionsRenderer.setPanel(null);\r\n      } else {\r\n        this.directionsRenderer.setPanel(this.panel);\r\n      }\r\n\r\n      // Render exist direction\r\n      if (this.renderRoute) {\r\n        this.directionsRenderer.setDirections(this.renderRoute);\r\n        this.renderRoute = undefined;\r\n      } else {\r\n\r\n        // Request new direction\r\n        this.directionsService.route({\r\n          origin: this.origin,\r\n          destination: this.destination,\r\n          travelMode: this.travelMode || google.maps.TravelMode.DRIVING,\r\n          transitOptions: this.transitOptions,\r\n          drivingOptions: this.drivingOptions,\r\n          waypoints: this.waypoints,\r\n          optimizeWaypoints: this.optimizeWaypoints,\r\n          provideRouteAlternatives: this.provideRouteAlternatives,\r\n          avoidHighways: this.avoidHighways,\r\n          avoidTolls: this.avoidTolls,\r\n        }, (response, status) => {\r\n\r\n          this.onResponse.emit(response);\r\n\r\n          // Emit Query Status\r\n          this.status.emit(status);\r\n\r\n          /**\r\n           * DirectionsStatus\r\n           * https://developers.google.com/maps/documentation/javascript/directions#DirectionsStatus\r\n           */\r\n          switch (status) {\r\n            case google.maps.DirectionsStatus.OK:\r\n\r\n              this.directionsRenderer.setDirections(response);\r\n\r\n              /**\r\n               * Emit The DirectionsResult Object\r\n               * https://developers.google.com/maps/documentation/javascript/directions?hl=en#DirectionsResults\r\n               */\r\n              // Custom Markers\r\n              if (typeof this.markerOptions !== 'undefined') {\r\n\r\n                this.destroyMarkers();\r\n\r\n                // Set custom markers\r\n                const _route = response.routes[0].legs[0];\r\n                try {\r\n                  // Origin Marker\r\n                  if (typeof this.markerOptions.origin !== 'undefined') {\r\n                    this.markerOptions.origin.map = map;\r\n                    this.markerOptions.origin.position = _route.start_location;\r\n                    this.originMarker = this.setMarker(\r\n                      map,\r\n                      this.originMarker,\r\n                      this.markerOptions.origin,\r\n                      _route.start_address,\r\n                    );\r\n\r\n                    if (this.markerOptions.origin.draggable) {\r\n                      this.originMarker.addListener('dragend', () => {\r\n                        this.origin = this.originMarker.position;\r\n                        this.directionDraw();\r\n                        this.originDrag.emit(this.origin);\r\n                      });\r\n                    }\r\n                  }\r\n                  // Destination Marker\r\n                  if (typeof this.markerOptions.destination !== 'undefined') {\r\n                    this.markerOptions.destination.map = map;\r\n                    this.markerOptions.destination.position = _route.end_location;\r\n                    this.destinationMarker = this.setMarker(\r\n                      map,\r\n                      this.destinationMarker,\r\n                      this.markerOptions.destination,\r\n                      _route.end_address,\r\n                    );\r\n                    if (this.markerOptions.destination.draggable) {\r\n                      this.destinationMarker.addListener('dragend', () => {\r\n                        this.destination = this.destinationMarker.position;\r\n                        this.directionDraw();\r\n                        this.destinationDrag.emit(this.destination);\r\n                      });\r\n                    }\r\n                  }\r\n\r\n                  // Waypoints Marker\r\n                  if (typeof this.markerOptions.waypoints !== 'undefined') {\r\n\r\n                    this.waypoints.forEach((waypoint, index) => {\r\n\r\n                      // If waypoints are not array then set all the same\r\n                      if (!Array.isArray(this.markerOptions.waypoints)) {\r\n                        this.markerOptions.waypoints.map = map;\r\n                        this.markerOptions.waypoints.position = _route.via_waypoints[index];\r\n                        this.waypointsMarker.push(this.setMarker(\r\n                          map,\r\n                          waypoint,\r\n                          this.markerOptions.waypoints,\r\n                          _route.via_waypoints[index],\r\n                        ));\r\n                      } else {\r\n                        this.markerOptions.waypoints[index].map = map;\r\n                        this.markerOptions.waypoints[index].position = _route.via_waypoints[index];\r\n                        this.waypointsMarker.push(this.setMarker(\r\n                          map,\r\n                          waypoint,\r\n                          this.markerOptions.waypoints[index],\r\n                          _route.via_waypoints[index],\r\n                        ));\r\n                      }\r\n\r\n                    }); // End forEach\r\n\r\n                  }\r\n                } catch (err) {\r\n                  console.error('MarkerOptions error.', err);\r\n                }\r\n              }\r\n\r\n              break;\r\n\r\n            case google.maps.DirectionsStatus.OVER_QUERY_LIMIT:\r\n              console.warn('The webpage has sent too many requests within the allowed time period.');\r\n              break;\r\n            default:\r\n              // console.warn(status);\r\n              break;\r\n          } // End switch\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Custom Origin and Destination Icon\r\n   * @param map map\r\n   * @param marker marker\r\n   * @param markerOpts properties\r\n   * @param content marker's infowindow content\r\n   * @returns new marker\r\n   * @memberof AgmDirection\r\n   */\r\n  private setMarker(\r\n    map: google.maps.Map,\r\n    marker: google.maps.Marker | google.maps.DirectionsWaypoint,\r\n    markerOpts: any,\r\n    content: google.maps.LatLng | string\r\n  ): google.maps.Marker {\r\n    if (typeof this.infoWindow === 'undefined') {\r\n      this.infoWindow = new google.maps.InfoWindow();\r\n      this.sendInfoWindow.emit(this.infoWindow);\r\n    }\r\n\r\n    marker = new google.maps.Marker(markerOpts);\r\n    // https://developers.google.com/maps/documentation/javascript/reference/marker?hl=zh-tw#MarkerOptions.clickable\r\n    if (marker.getClickable()) {\r\n      marker.addListener('click', () => {\r\n        const infowindoContent: string = typeof markerOpts.infoWindow === 'undefined' ? content : markerOpts.infoWindow;\r\n        this.infoWindow.setContent(infowindoContent);\r\n        this.infoWindow.open(map, marker as google.maps.MVCObject);\r\n      });\r\n    }\r\n    return marker;\r\n  }\r\n\r\n  /**\r\n   * This event is fired when remove markers\r\n   */\r\n  private removeMarkers(): void {\r\n    if (typeof this.originMarker !== 'undefined') {\r\n      this.originMarker.setMap(null);\r\n    }\r\n    if (typeof this.destinationMarker !== 'undefined') {\r\n      this.destinationMarker.setMap(null);\r\n    }\r\n    this.waypointsMarker.forEach((w: any) => {\r\n      if (typeof w !== 'undefined') {\r\n        w.setMap(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This event is fired when remove directions\r\n   */\r\n  private removeDirections(): void {\r\n    if (this.directionsRenderer !== undefined) {\r\n      // @ts-ignore\r\n      this.directionsRenderer.setPanel(null);\r\n      this.directionsRenderer.setMap(null);\r\n      // @ts-ignore\r\n      this.directionsRenderer = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This event is fired when destroy markers\r\n   */\r\n  private destroyMarkers(): void {\r\n    // Remove origin markers\r\n    try {\r\n      if (typeof this.originMarker !== 'undefined') {\r\n        google.maps.event.clearListeners(this.originMarker, 'click');\r\n        if (this.markerOptions.origin.draggable) {\r\n          google.maps.event.clearListeners(this.originMarker, 'dragend');\r\n        }\r\n      }\r\n      if (typeof this.destinationMarker !== 'undefined') {\r\n        google.maps.event.clearListeners(this.destinationMarker, 'click');\r\n        if (this.markerOptions.origin.draggable) {\r\n          google.maps.event.clearListeners(this.destinationMarker, 'dragend');\r\n        }\r\n      }\r\n      this.waypointsMarker.forEach((w: any) => {\r\n        if (typeof w !== 'undefined') {\r\n          google.maps.event.clearListeners(w, 'click');\r\n        }\r\n      });\r\n      this.removeMarkers();\r\n\r\n    } catch (err) {\r\n      console.error('Can not reset custom marker.', err);\r\n    }\r\n  }\r\n}\r\n"]}